$columns: 12;
$atom: (100% / $columns);

$break_xlg: 1440px;
$break_lg: 1200px;
$break_md: 992px;
$break_sm: 768px;
$break_xs: 544px;
$break_xxs: 320px;

$offset: 15px;
$offset_xlg: $offset;
$offset_lg: $offset;
$offset_md: $offset;
$offset_sm: $offset;
$offset_xs: $offset;
$offset_xxs: $offset;

$offset_one_side: ($offset / 2);
$offset_xlg_one_side: ($offset_xlg / 2);
$offset_lg_one_side: ($offset_lg / 2);
$offset_md_one_side: ($offset_md / 2);
$offset_sm_one_side: ($offset_sm / 2);
$offset_xs_one_side: ($offset_xs / 2);
$offset_xxs_one_side: ($offset_xxs / 2);

$fields: 30px;
$fields_xlg: 15px;
$fields_lg: 15px;
$fields_md: 15px;
$fields_sm: 15px;
$fields_xs: 15px;
$fields_xxs: 15px;

@mixin container-full() {
  padding-left: $fields;
  padding-right: $fields;

  @include xlg-block() {
    padding-left: $fields_xlg;
    padding-right: $fields_xlg;
  }

  @include lg-block() {
    padding-left: $fields_lg;
    padding-right: $fields_lg;
  }

  @include md-block() {
    padding-left: $fields_md;
    padding-right: $fields_md;
  }

  @include sm-block() {
    padding-left: $fields_sm;
    padding-right: $fields_sm;
  }

  @include xs-block() {
    padding-left: $fields_xs;
    padding-right: $fields_xs;
  }

  @include xxs-block() {
    padding-left: $fields_xxs;
    padding-right: $fields_xxs;
  }
}

@mixin row-offsets() {
  margin-left: ($offset_one_side * -1);
  margin-right: ($offset_one_side * -1);
}

@mixin col-offsets($type) {
  #{$type}-left: $offset_one_side;
  #{$type}-right: $offset_one_side;
}

@mixin container() {
  max-width: 1280px;
  margin: 0 auto;
  @include container-full();
}

@mixin row-flex() {
  display: flex;
  flex-wrap: wrap;
  @include row-offsets();
}

@mixin row-float() {
  @include row-offsets();
  @include clearfix();
}

@mixin row-ib() {
  @include row-offsets();
}

@mixin col() {
  box-sizing: border-box;
  word-wrap: break-word;
  @include col-offsets(margin);
}

@mixin col-float() {
  float: left;
}

@mixin col-ib() {
  display: inline-block;
  vertical-align: top;
}

@mixin col-padding() {
  word-wrap: break-word;
  @include col-offsets(padding);
}

@mixin size($n) {
  $val: 100% / $columns * $n;
  width: #{calc(#{$val} - #{$offset})};
}

@mixin size-xlg($n) {
  $val: 100% / $columns * $n;
  @include xlg(width, #{calc(#{$val} - #{$offset_xlg})});
}

@mixin size-lg($n) {
  $val: 100% / $columns * $n;
  @include lg(width, #{calc(#{$val} - #{$offset_lg})});
}

@mixin size-md($n) {
  $val: 100% / $columns * $n;
  @include md(width, #{calc(#{$val} - #{$offset_md})});
}

@mixin size-sm($n) {
  $val: 100% / $columns * $n;
  @include sm(width, #{calc(#{$val} - #{$offset_sm})});
}

@mixin size-xs($n) {
  $val: 100% / $columns * $n;
  @include xs(width, #{calc(#{$val} - #{$offset_xs})});
}

@mixin size-xxs($n) {
  $val: 100% / $columns * $n;
  @include xxs(width, #{calc(#{$val} - #{$offset_xxs})});
}

@mixin shift($n) {
  $val: 100% / $columns * $n;
  margin-left: #{calc(#{$val} + #{$offset_one_side})};
  margin-right: #{calc(#{$val} + #{$offset_one_side})};
}

@mixin shift-left($n) {
  $val: 100% / $columns * $n;
  margin-left: #{calc(#{$val} + #{$offset_one_side})};
}

@mixin shift-right($n) {
  $val: 100% / $columns * $n;
  margin-right: #{calc(#{$val} + #{$offset_one_side})};
}

@mixin shift-padding($n) {
  $val: 100% / $columns * $n;
  padding-left: #{calc(#{$val} + #{$offset_one_side})};
  padding-right: #{calc(#{$val} + #{$offset_one_side})};
}

@mixin shift-padding-left($n) {
  $val: 100% / $columns * $n;
  padding-left: #{calc(#{$val} + #{$offset_one_side})};
}

@mixin shift-padding-right($n) {
  $val: 100% / $columns * $n;
  padding-right: #{calc(#{$val} + #{$offset_one_side})};
}

@mixin shift-xlg($n) {
  $val: 100% / $columns * $n;
  @include xlg(margin-left, #{calc(#{$val} + #{$offset_xlg_one_side})});
  @include xlg(margin-right, #{calc(#{$val} + #{$offset_xlg_one_side})});
}

@mixin shift-xlg-left($n) {
  $val: 100% / $columns * $n;
  @include xlg(margin-left, #{calc(#{$val} + #{$offset_xlg_one_side})});
}

@mixin shift-xlg-right($n) {
  $val: 100% / $columns * $n;
  @include xlg(margin-right, #{calc(#{$val} + #{$offset_xlg_one_side})});
}

@mixin shift-xlg-padding($n) {
  $val: 100% / $columns * $n;
  @include xlg(padding-left, #{calc(#{$val} + #{$offset_xlg_one_side})});
  @include xlg(padding-right, #{calc(#{$val} + #{$offset_xlg_one_side})});
}

@mixin shift-xlg-padding-left($n) {
  $val: 100% / $columns * $n;
  @include xlg(padding-left, #{calc(#{$val} + #{$offset_xlg_one_side})});
}

@mixin shift-xlg-padding-right($n) {
  $val: 100% / $columns * $n;
  @include xlg(padding-right, #{calc(#{$val} + #{$offset_xlg_one_side})});
}

@mixin shift-lg($n) {
  $val: 100% / $columns * $n;
  @include lg(margin-left, #{calc(#{$val} + #{$offset_lg_one_side})});
  @include lg(margin-right, #{calc(#{$val} + #{$offset_lg_one_side})});
}

@mixin shift-lg-left($n) {
  $val: 100% / $columns * $n;
  @include lg(margin-left, #{calc(#{$val} + #{$offset_lg_one_side})});
}

@mixin shift-lg-right($n) {
  $val: 100% / $columns * $n;
  @include lg(margin-right, #{calc(#{$val} + #{$offset_lg_one_side})});
}

@mixin shift-lg-padding($n) {
  $val: 100% / $columns * $n;
  @include lg(padding-left, #{calc(#{$val} + #{$offset_lg_one_side})});
  @include lg(padding-right, #{calc(#{$val} + #{$offset_lg_one_side})});
}

@mixin shift-lg-padding-left($n) {
  $val: 100% / $columns * $n;
  @include lg(padding-left, #{calc(#{$val} + #{$offset_lg_one_side})});
}

@mixin shift-lg-padding-right($n) {
  $val: 100% / $columns * $n;
  @include lg(padding-right, #{calc(#{$val} + #{$offset_lg_one_side})});
}

@mixin shift-md($n) {
  $val: 100% / $columns * $n;
  @include md(margin-left, #{calc(#{$val} + #{$offset_md_one_side})});
  @include md(margin-right, #{calc(#{$val} + #{$offset_md_one_side})});
}

@mixin shift-md-left($n) {
  $val: 100% / $columns * $n;
  @include md(margin-left, #{calc(#{$val} + #{$offset_md_one_side})});
}

@mixin shift-md-right($n) {
  $val: 100% / $columns * $n;
  @include md(margin-right, #{calc(#{$val} + #{$offset_md_one_side})});
}

@mixin shift-md-padding($n) {
  $val: 100% / $columns * $n;
  @include md(padding-left, #{calc(#{$val} + #{$offset_md_one_side})});
  @include md(padding-right, #{calc(#{$val} + #{$offset_md_one_side})});
}

@mixin shift-md-padding-left($n) {
  $val: 100% / $columns * $n;
  @include md(padding-left, #{calc(#{$val} + #{$offset_md_one_side})});
}

@mixin shift-md-padding-right($n) {
  $val: 100% / $columns * $n;
  @include md(padding-right, #{calc(#{$val} + #{$offset_md_one_side})});
}

@mixin shift-sm($n) {
  $val: 100% / $columns * $n;
  @include sm(margin-left, #{calc(#{$val} + #{$offset_sm_one_side})});
  @include sm(margin-right, #{calc(#{$val} + #{$offset_sm_one_side})});
}

@mixin shift-sm-left($n) {
  $val: 100% / $columns * $n;
  @include sm(margin-left, #{calc(#{$val} + #{$offset_sm_one_side})});
}

@mixin shift-sm-right($n) {
  $val: 100% / $columns * $n;
  @include sm(margin-right, #{calc(#{$val} + #{$offset_sm_one_side})});
}

@mixin shift-sm-padding($n) {
  $val: 100% / $columns * $n;
  @include sm(padding-left, #{calc(#{$val} + #{$offset_sm_one_side})});
  @include sm(padding-right, #{calc(#{$val} + #{$offset_sm_one_side})});
}

@mixin shift-sm-padding-left($n) {
  $val: 100% / $columns * $n;
  @include sm(padding-left, #{calc(#{$val} + #{$offset_sm_one_side})});
}

@mixin shift-sm-padding-right($n) {
  $val: 100% / $columns * $n;
  @include sm(padding-right, #{calc(#{$val} + #{$offset_sm_one_side})});
}

@mixin shift-xs($n) {
  $val: 100% / $columns * $n;
  @include xs(margin-left, #{calc(#{$val} + #{$offset_xs_one_side})});
  @include xs(margin-right, #{calc(#{$val} + #{$offset_xs_one_side})});
}

@mixin shift-xs-left($n) {
  $val: 100% / $columns * $n;
  @include xs(margin-left, #{calc(#{$val} + #{$offset_xs_one_side})});
}

@mixin shift-xs-right($n) {
  $val: 100% / $columns * $n;
  @include xs(margin-right, #{calc(#{$val} + #{$offset_xs_one_side})});
}

@mixin shift-xs-padding($n) {
  $val: 100% / $columns * $n;
  @include xs(padding-left, #{calc(#{$val} + #{$offset_xs_one_side})});
  @include xs(padding-right, #{calc(#{$val} + #{$offset_xs_one_side})});
}

@mixin shift-xs-padding-left($n) {
  $val: 100% / $columns * $n;
  @include xs(padding-left, #{calc(#{$val} + #{$offset_xs_one_side})});
}

@mixin shift-xs-padding-right($n) {
  $val: 100% / $columns * $n;
  @include xs(padding-right, #{calc(#{$val} + #{$offset_xs_one_side})});
}

@mixin shift-xxs($n) {
  $val: 100% / $columns * $n;
  @include xxs(margin-left, #{calc(#{$val} + #{$offset_xxs_one_side})});
  @include xxs(margin-right, #{calc(#{$val} + #{$offset_xxs_one_side})});
}

@mixin shift-xxs-left($n) {
  $val: 100% / $columns * $n;
  @include xxs(margin-left, #{calc(#{$val} + #{$offset_xxs_one_side})});
}

@mixin shift-xxs-right($n) {
  $val: 100% / $columns * $n;
  @include xxs(margin-right, #{calc(#{$val} + #{$offset_xxs_one_side})});
}

@mixin shift-xxs-padding($n) {
  $val: 100% / $columns * $n;
  @include xxs(padding-left, #{calc(#{$val} + #{$offset_xxs_one_side})});
  @include xxs(padding-right, #{calc(#{$val} + #{$offset_xxs_one_side})});
}

@mixin shift-xxs-padding-left($n) {
  $val: 100% / $columns * $n;
  @include xxs(padding-left, #{calc(#{$val} + #{$offset_xxs_one_side})});
}

@mixin shift-xxs-padding-right($n) {
  $val: 100% / $columns * $n;
  @include xxs(padding-right, #{calc(#{$val} + #{$offset_xxs_one_side})});
}

@mixin xlg($name, $value) {
  @media screen and (max-width: $break_xlg) {
    #{$name}: $value;
  }
}

@mixin xlg-block() {
  @media screen and (max-width: $break_xlg) {
    @content;
  }
}

@mixin lg($name, $value) {
  @media screen and (max-width: $break_lg) {
    #{$name}: $value;
  }
}

@mixin lg-block() {
  @media screen and (max-width: $break_lg) {
    @content;
  }
}

@mixin md($name, $value) {
  @media screen and (max-width: $break_md) {
    #{$name}: $value;
  }
}

@mixin md-block() {
  @media screen and (max-width: $break_md) {
    @content;
  }
}

@mixin sm($name, $value) {
  @media screen and (max-width: $break_sm) {
    #{$name}: $value;
  }
}

@mixin sm-block() {
  @media screen and (max-width: $break_sm) {
    @content;
  }
}

@mixin xs($name, $value) {
  @media screen and (max-width: $break_xs) {
    #{$name}: $value;
  }
}

@mixin xs-block() {
  @media screen and (max-width: $break_xs) {
    @content;
  }
}

@mixin xxs($name, $value) {
  @media screen and (max-width: $break_xxs) {
    #{$name}: $value;
  }
}

@mixin xxs-block() {
  @media screen and (max-width: $break_xxs) {
    @content;
  }
}

@mixin from($min_width) {
  @media screen and (min-width: $min_width) {
    @content;
  }
}

@mixin to($max_width) {
  @media screen and (max-width: $max_width) {
    @content;
  }
}

@mixin from-to($min_width, $max_width) {
  @media screen and (min-width: $min_width) and (max-width: $max_width) {
    @content;
  }
}
